{"version":3,"sources":["../../src/controller/licence.js"],"names":["randomize","require","nodemailer","transporter","createTransport","service","auth","user","pass","config","db","api","get","req","res","Licence","find","err","users","send","json","serial","params","console","log","put","body","username","imei","phoneSerial","message","ref","update","id","_id","findByIdAndUpdate","licenceKey","email","mailOptions","from","to","subject","html","sendMail","post","newLicence","save"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,YAAYC,QAAQ,YAAR,CAAlB;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;;AAEA,IAAME,cAAcD,WAAWE,eAAX,CAA2B;AAC7CC,WAAS,OADoC;AAE7CC,QAAM;AACJC,UAAM,uBADF;AAEJC,UAAM;AAFF;AAFuC,CAA3B,CAApB;;kBAQc,gBAAoB;AAAA,MAAjBC,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AAChC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBC,sBAAQC,IAAR,CAAa,EAAb,EAAiB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AAC/B,UAAID,GAAJ,EAAS;AACPH,YAAIK,IAAJ,CAASF,GAAT;AACD;AACDH,UAAIM,IAAJ,CAASF,KAAT;AACD,KALD;AAMD,GAPD;;AASA;AACAP,MAAIC,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChCC,sBAAQC,IAAR,CAAc,EAACK,QAAQR,IAAIS,MAAJ,CAAWD,MAApB,EAAd,EAA4C,UAACJ,GAAD,EAAMV,IAAN,EAAe;AACzD,UAAIU,GAAJ,EAAS;AACPM,gBAAQC,GAAR,CAAYP,GAAZ;AACD;AACDH,UAAIM,IAAJ,CAASb,IAAT;AACD,KALD;AAMD,GAPD;;AASA;AACAI,MAAIc,GAAJ,CAAQ,UAAR,EAAoB,UAACZ,GAAD,EAAMC,GAAN,EAAc;AAChCC,sBAAQC,IAAR,CAAa,EAACK,QAAQR,IAAIa,IAAJ,CAASL,MAAlB,EAAb,EAAyC,UAACJ,GAAD,EAAMV,IAAN,EAAe;AACtD,UAAIU,GAAJ,EAAS;AACPM,gBAAQC,GAAR,CAAYP,GAAZ;AACD;AACDM,cAAQC,GAAR,CAAYjB,IAAZ,EAAkB,YAAlB;AACD,UAAG;;AAEA,YAAGA,KAAK,CAAL,EAAQoB,QAAR,KAAqBd,IAAIa,IAAJ,CAASC,QAAjC,EAA0C;AACtC,cAAIpB,KAAK,CAAL,EAAQqB,IAAR,KAAgBf,IAAIa,IAAJ,CAASE,IAAzB,IAAiCrB,KAAK,CAAL,EAAQsB,WAAR,KAAuBhB,IAAIa,IAAJ,CAASG,WAArE,EAAmF;AAClFf,gBAAIM,IAAJ,CAAS,EAAEU,SAAS,2CAAX,EAAT;AACA,WAFD,MAII;AACF;AACD,gBAAIC,MAAM/B,UAAU,GAAV,EAAe,EAAf,CAAV;;AAEC,gBAAIgC,SAAS;AACX,uBAAU,CADC;AAEX,6BAAgBnB,IAAIa,IAAJ,CAASG,WAFd;AAGX,4BAAeE,GAHJ;AAIX,sBAASlB,IAAIa,IAAJ,CAASE;AAJP,aAAb;;AAOA,gBAAIK,KAAK1B,KAAK,CAAL,EAAQ2B,GAAjB;AACAnB,8BAAQoB,iBAAR,CAA2BF,EAA3B,EAA+BD,MAA/B,EAAwC,UAACf,GAAD,EAAMV,IAAN,EAAe;AACrD,kBAAIU,GAAJ,EAAQ;AACNM,wBAAQC,GAAR,CAAYP,GAAZ;AACD;AACDM,sBAAQC,GAAR,CAAYjB,KAAK6B,UAAjB,EAA6B,cAA7B;AACC;AACC,kBAAIC,QAAQ9B,KAAK8B,KAAjB;AACA,kBAAIC,cAAc;AAChBC,sBAAM,gCADU;AAEhBC,oBAAIH,KAFY;AAGhBI,yBAAS,mCAHO;AAIhBC,sBAAM;AAJU,eAAlB;AAMAvC,0BAAYwC,QAAZ,CAAqBL,WAArB;AACD,qBAAOxB,IAAIM,IAAJ,CAAS,EAAEgB,iBAAcL,GAAhB,EAAT,CAAP;AACF,aAfD;AAgBD;AACJ,SAlCD,MAmCK;AAACjB,cAAIM,IAAJ,CAAS,EAACU,SAAS,qBAAV,EAAT;AAA2C;AAClD,OAtCF,CAsCE,OAAMb,GAAN,EAAU;AACTH,YAAIM,IAAJ,CAAS,EAACU,SAAS,qBAAV,EAAT;AACD;AACF,KA9CD;AA+CD,GAhDD;;AAmDF;AACEnB,MAAIiC,IAAJ,CAAS,MAAT,EAAiB,UAAC/B,GAAD,EAAMC,GAAN,EAAc;;AAEzB;AACA,QAAI+B,aAAa,IAAI9B,iBAAJ,EAAjB;AACA8B,eAAWlB,QAAX,GAAsBd,IAAIa,IAAJ,CAASC,QAA/B;AACAkB,eAAWxB,MAAX,GAAoBR,IAAIa,IAAJ,CAASL,MAA7B;AACAwB,eAAWR,KAAX,GAAmBxB,IAAIa,IAAJ,CAASW,KAA5B;;AAGAQ,eAAWC,IAAX,CAAgB,UAAS7B,GAAT,EAAcV,IAAd,EAAoB;AAClC,UAAIU,GAAJ,EAAS;AACPM,gBAAQC,GAAR,CAAYP,GAAZ;AACD;AACE;AACG,UAAIoB,QAAQxB,IAAIa,IAAJ,CAASW,KAArB;AACAd,cAAQC,GAAR,CAAYa,KAAZ;AACA,UAAIC,cAAc;AAChBC,cAAM,gCADU;AAEhBC,YAAIH,KAFY;AAGhBI,iBAAS,qCAHO;AAIhBC,cAAM;;AAGZ;AAPsB,OAAlB,CAQJvC,YAAYwC,QAAZ,CAAqBL,WAArB;AACAxB,UAAIM,IAAJ,CAAS,EAAEC,aAAWd,KAAKc,MAAlB,EAAT;AACH,KAjBD;AAmBH,GA5BH;AA6BA,SAAOV,GAAP;AACD,C","file":"licence.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport Licence from '../model/licence';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\n\nconst randomize = require('randomatic');\nconst nodemailer = require('nodemailer');\n\nconst transporter = nodemailer.createTransport({\n  service: 'gmail',\n  auth: {\n    user: 'adedapopaul@gmail.com',\n    pass: 'moronkeji'\n  }\n});\n\nexport default({ config, db }) => {\n  let api = Router();\n\n  // '/v1/user' - GET all users\n  api.get('/', (req, res) => {\n    Licence.find({}, (err, users) => {\n      if (err) {\n        res.send(err);\n      }\n      res.json(users);\n    });\n  });\n\n  // '/v1/licence/:serial' - GET a specific user \n  api.get('/:serial', (req, res) => {\n    Licence.find( {serial: req.params.serial} , (err, user) => {\n      if (err) {\n        console.log(err)\n      }\n      res.json(user);\n    });\n  });\n\n  // '/v1/licence' - POST - update a user  \n  api.put('/licence', (req, res) => {\n    Licence.find({serial: req.body.serial }, (err, user) => {\n      if (err) {\n        console.log(err)\n      }\n      console.log(user, 'first user')\n     try{ \n\n        if(user[0].username === req.body.username){\n            if( user[0].imei=== req.body.imei || user[0].phoneSerial ===req.body.phoneSerial  ){\n             res.json({ message: 'This serial number is for a single device'})\n            }\n\n            else{\n              //generate reference number\n             let ref = randomize('a', 20);\n\n              let update = {\n                \"count\" : 1,\n                \"phoneSerial\" : req.body.phoneSerial,\n                \"licenceKey\" : ref,\n                \"imei\" : req.body.imei,\n              }\n\n              let id = user[0]._id\n              Licence.findByIdAndUpdate( id, update,  (err, user) => {\n                if (err){\n                  console.log(err)\n                }\n                console.log(user.licenceKey, \" second user\")\n                 // send notification email to buyer\n                  let email = user.email\n                  var mailOptions = {\n                    from: 'noreplySale@jyqwinslimited.com',\n                    to: email,\n                    subject: 'Confirmation of Device Activation',\n                    html: '<h1>Hello </h1><p>This is to confirm the payment for your device activation. Thank you.</p><p>Contact us on +234 816 787 6460 for any enquiry.</p>'\n                  }\n                  transporter.sendMail(mailOptions)\n                 return res.json({ licenceKey:`${ref}` } );\n              });\n            }\n        }\n         else{res.json({message: 'User does not exist'})}\n      }catch(err){\n        res.json({message: 'User does not exist'})\n      }\n    });\n  });\n\n\n// '/v1/licence/add' - POST - add a serial \n  api.post('/add', (req, res) => {\n        \n        // create user profile\n        let newLicence = new Licence();\n        newLicence.username = req.body.username;\n        newLicence.serial = req.body.serial;\n        newLicence.email = req.body.email;\n\n\n        newLicence.save(function(err, user) {\n          if (err) {\n            console.log(err)\n          }\n             // send notification email to buyer\n                let email = req.body.email;\n                console.log(email)\n                var mailOptions = {\n                  from: 'noreplySale@jyqwinslimited.com',\n                  to: email,\n                  subject: 'Here is your Licence Serial Number!',\n                  html: '<h3>Dear Valued Customer </h3><p>Thank you for getting in touch with us. We have received your request for a licence. One of our team will get in touch with you soon.</p><p>You can also Contact us on +234 816 787 6460 for any enquiry.</p><p> Many Thanks</p>'\n                }\n\n            // send mail with defined transport object\n            transporter.sendMail(mailOptions)\n            res.json({ serial: `${user.serial}`});\n        });\n\n    });\n  return api;\n}\n"]}