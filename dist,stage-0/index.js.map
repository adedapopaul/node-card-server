{"version":3,"sources":["../src/index.js"],"names":["app","server","http","createServer","use","bodyParser","json","limit","config","bodyLimit","req","res","next","header","routes","get","send","post","body","email","password","text","listen","port","console","log","address"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,MAAM,wBAAV;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAEA;;AAEAA,IAAII,GAAJ,CAAQC,qBAAWC,IAAX,CAAgB;AACtBC,QAAQC,iBAAOC;AADO,CAAhB,CAAR;AAGA;AACAT,IAAII,GAAJ,CAAQ,UAAUM,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9BD,KAAIE,MAAJ,CAAW,cAAX,EAA2B,kBAA3B;AACAD;AACH,CAHD;;AAKA;AACAZ,IAAII,GAAJ,CAAQ,UAASM,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyB;AAChCD,KAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,KAAIE,MAAJ,CAAW,8BAAX,EAA2C,gDAA3C;AACAF,KAAIE,MAAJ,CAAW,8BAAX,EAA2C,2BAA3C;AACAD;AACA,CALD;;AAOA;AACAZ,IAAII,GAAJ,CAAQ,KAAR,EAAeU,gBAAf;;AAGA;AACAd,IAAIe,GAAJ,CAAQ,GAAR,EAAa,UAASL,GAAT,EAAcC,GAAd,EAAkB;AAC9BA,KAAIK,IAAJ,CAAS,cAAT;AACA,CAFD;;AAIA;AACAhB,IAAIiB,IAAJ,CAAS,QAAT,EAAmB,UAACP,GAAD,EAAMC,GAAN,EAAc;AAChC,KAAGD,IAAIQ,IAAJ,CAASC,KAAT,IAAkB,uBAAlB,IAA6CT,IAAIQ,IAAJ,CAASE,QAAT,IAAqB,UAArE,EAAgF;AAC/ET,MAAIL,IAAJ,CAAS;AACRe,SAAM;AADE,GAAT;AAGA,EAJD,MAKI;AACHV,MAAIL,IAAJ,CAAS;AACRe,SAAM;AADE,GAAT;AAGA;AACD,CAXD;;AAaArB,IAAIC,MAAJ,CAAWqB,MAAX,CAAkBd,iBAAOe,IAAzB;;AAEAC,QAAQC,GAAR,sBAA+BzB,IAAIC,MAAJ,CAAWyB,OAAX,GAAqBH,IAApD;;kBAEevB,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport mongoose from 'mongoose';\nimport config from './config';\nimport routes from './routes';\n\nlet app = express();\napp.server = http.createServer(app);\n\n// middleware\n\napp.use(bodyParser.json({\n  limit : config.bodyLimit\n}));\n// Use middleware to set the default Content-Type\napp.use(function (req, res, next) {\n    res.header('Content-Type', 'application/json');\n    next();\n});\n\n//allow cross origin request\napp.use(function(req, res, next) {\n\tres.header(\"Access-Control-Allow-Origin\", \"*\");\n\tres.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n\tres.header('Access-Control-Allow-Methods', 'GET,PUT,PATCH,POST,DELETE');\n\tnext();\n});\n\n// api routes v1\napp.use('/v1', routes);\n\n\n//route response for default home\napp.get('/', function(req, res){\n\tres.send(\"Welcome home\")\n})\n\n//hardcoded login route\napp.post('/login', (req, res) => {\n\tif(req.body.email == \"adedapopaul@yahoo.com\" && req.body.password == 'password'){\n\t\tres.json({\n\t\t\ttext: 'login successful'\n\t\t})\n\t}\n\telse{\n\t\tres.json({\n\t\t\ttext: 'user does not exist'\n\t\t})\n\t}\n})\n\napp.server.listen(config.port);\n\nconsole.log(`Started on port ${app.server.address().port}`);\n\nexport default app;\n"]}